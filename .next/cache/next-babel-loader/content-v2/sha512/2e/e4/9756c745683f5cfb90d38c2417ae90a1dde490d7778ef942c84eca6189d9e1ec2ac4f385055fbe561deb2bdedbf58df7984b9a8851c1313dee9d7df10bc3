{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stephenstocking/Desktop/coding class/junior2senior/next-ssr/pages/robots.js\",\n    _this = this;\n\nimport Link from 'next/link';\n\nvar Robots = function Robots(props) {\n  var robots = Object.values(props);\n  console.log('robots', robots[0].name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Robots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: robots.map(function (robot) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"robots/\".concat(robot.id),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: robot.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, _this)\n        }, robot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Robots;\nexport var __N_SSG = true;\nexport default Robots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Robots\");","map":{"version":3,"sources":["/Users/stephenstocking/Desktop/coding class/junior2senior/next-ssr/pages/robots.js"],"names":["Link","Robots","props","robots","Object","values","console","log","name","map","robot","id"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAEtB,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcH,KAAd,CAAf;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAM,CAAC,CAAD,CAAN,CAAUK,IAAhC;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAFJ,eAOI;AAAA,gBAEQL,MAAM,CAACM,GAAP,CAAW,UAAAC,KAAK;AAAA,4BACZ;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,IAAI,mBAAYA,KAAK,CAACC,EAAlB,CAAV;AAAA,mCACI;AAAA,wBACKD,KAAK,CAACF;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,WAASE,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,iBADY;AAAA,OAAhB;AAFR;AAAA;AAAA;AAAA;AAAA,aAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAuBH,CA5BD;;KAAMV,M;;AAsCN,eAAeA,MAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = (props) => {\n\n    const robots = Object.values(props)\n    console.log('robots', robots[0].name)\n\n    return (\n        <div>\n            <h1>Robots</h1>\n            <Link href='/'>\n                <button>\n                    Home\n                </button>\n            </Link>\n            <div>\n                {\n                    robots.map(robot => (\n                        <li key={robot.id}>\n                            <Link href={`robots/${robot.id}`}>\n                                <a>\n                                    {robot.name}\n                                </a>\n                            </Link>\n                        </li>\n                    ))\n                }\n            </div>\n        </div>\n    )\n};\n\nexport const getStaticProps = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/users')\n    const data = await res.json()\n    return {\n        props: {...data}\n    }\n}\n\nexport default Robots;"]},"metadata":{},"sourceType":"module"}