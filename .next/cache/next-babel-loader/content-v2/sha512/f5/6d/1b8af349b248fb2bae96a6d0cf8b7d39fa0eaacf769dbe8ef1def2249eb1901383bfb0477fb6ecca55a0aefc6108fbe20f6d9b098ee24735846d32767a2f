{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephenstocking/Desktop/coding class/junior2senior/next-ssr/pages/robots.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = props => {\n  const robots = Object.values(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Robots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: robots.map(robot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `robots/${robot.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: robot.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this)\n      }, robot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getStaticProps = async () => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await res.json();\n  return {\n    props: _objectSpread({}, data)\n  };\n};\nexport default Robots;","map":{"version":3,"sources":["/Users/stephenstocking/Desktop/coding class/junior2senior/next-ssr/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","Object","values","map","robot","id","name","getStaticProps","res","data","json"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtB,QAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcH,KAAd,CAAf;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAA,gBAEQC,MAAM,CAACG,GAAP,CAAWC,KAAK,iBACZ;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,UAASA,KAAK,CAACC,EAAG,EAA/B;AAAA,iCACI;AAAA,sBACKD,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,SAASF,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA3BD;;AA6BA,OAAO,MAAME,cAAc,GAAG,YAAY;AACtC,QAAMC,GAAG,GAAG,MAAMX,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMY,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,SAAO;AACHX,IAAAA,KAAK,oBAAMU,IAAN;AADF,GAAP;AAGH,CANM;AAQP,eAAeX,MAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = (props) => {\n\n    const robots = Object.values(props)\n\n    return (\n        <div>\n            <h1>Robots</h1>\n            <Link href='/'>\n                <button>\n                    Home\n                </button>\n            </Link>\n            <div>\n                {\n                    robots.map(robot => (\n                        <li key={robot.id}>\n                            <Link href={`robots/${robot.id}`}>\n                                <a>\n                                    {robot.name}\n                                </a>\n                            </Link>\n                        </li>\n                    ))\n                }\n            </div>\n        </div>\n    )\n};\n\nexport const getStaticProps = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/users')\n    const data = await res.json()\n    return {\n        props: {...data}\n    }\n}\n\nexport default Robots;"]},"metadata":{},"sourceType":"module"}